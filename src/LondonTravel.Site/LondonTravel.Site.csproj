<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
    <Description>https://londontravel.martincostello.com/</Description>
    <EnableConfigurationBindingGenerator>true</EnableConfigurationBindingGenerator>
    <EnableRequestDelegateGenerator>true</EnableRequestDelegateGenerator>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);CA1716</NoWarn>
    <OutputType>Exe</OutputType>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <RootNamespace>MartinCostello.LondonTravel.Site</RootNamespace>
    <SatelliteResourceLanguages>en,en-GB,en-US,qps-Ploc</SatelliteResourceLanguages>
    <Summary>Website for the London Travel Amazon Alexa skill.</Summary>
    <TargetFramework>net8.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>latest</TypeScriptToolsVersion>
    <UserSecretsId>londontravel.martincostello.com</UserSecretsId>
    <XlfLanguages>en-GB;en-US;qps-Ploc</XlfLanguages>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AspNet.Security.OAuth.Amazon" />
    <PackageReference Include="AspNet.Security.OAuth.Apple" />
    <PackageReference Include="AspNet.Security.OAuth.GitHub" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Blobs" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Keys" />
    <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" />
    <PackageReference Include="Azure.Identity" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Facebook" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Google" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Twitter" />
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.HostingStartup" />
    <PackageReference Include="Microsoft.Azure.Cosmos" />
    <PackageReference Include="Microsoft.DotNet.XliffTasks" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Extensions.Http.Polly" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" />
    <PackageReference Include="Polly" />
    <PackageReference Include="Refit" />
    <PackageReference Include="Serilog" />
    <PackageReference Include="Serilog.Extensions.Logging" />
    <PackageReference Include="Serilog.Settings.Configuration" />
    <PackageReference Include="Serilog.Sinks.ApplicationInsights" />
    <PackageReference Include="Serilog.Sinks.Console" />
    <PackageReference Include="Swashbuckle.AspNetCore" />
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="package.json;package-lock.json;tsconfig.json" CopyToPublishDirectory="Never" />
    <EmbeddedResource Update="SiteResources.resx" Generator="" />
    <InternalsVisibleTo Include="LondonTravel.Site.Tests" />
    <None Remove="assets\scripts\**\*.ts" />
    <TypeScriptCompile Include="assets\scripts\**\*.ts" />
  </ItemGroup>
  <Target Name="PrepublishScript" BeforeTargets="PrepareForPublish" Condition=" '$(SkipCompileClientScripts)' != 'true' ">
    <Exec Command="npm ci" Condition=" '$(InstallWebPackages)' == 'true' or !Exists('$(MSBuildThisFileDirectory)\node_modules') " />
    <Exec Command="npm run build" Condition=" ('$(BuildingInsideVisualStudio)' != 'true' and '$(GITHUB_ACTIONS)' != 'true') or !Exists('$(MSBuildThisFileDirectory)\wwwroot\assets\js\site.min.js') " />
  </Target>
  <Target Name="AddGeneratedContentItems" BeforeTargets="AssignTargetPaths" Condition="'$(CI)' != ''">
    <ItemGroup>
      <Content Include="wwwroot/**" CopyToPublishDirectory="PreserveNewest" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);@(Content)" />
    </ItemGroup>
  </Target>
  <ItemGroup>
    <_PseudoLocalizedFiles Include="$(MSBuildThisFileDirectory)xlf\*.qps-Ploc.xlf" />
  </ItemGroup>
  <PropertyGroup>
    <_PseudoLocalizeInstalledCommand Condition=" '$(OS)' == 'Windows_NT' ">where pseudo-localize</_PseudoLocalizeInstalledCommand>
    <_PseudoLocalizeInstalledCommand Condition=" '$(OS)' != 'Windows_NT' ">which pseudo-localize</_PseudoLocalizeInstalledCommand>
  </PropertyGroup>
  <Target Name="UpdatePseudoLocalization" AfterTargets="UpdateXlf">
    <Exec Command="$(_PseudoLocalizeInstalledCommand)" ConsoleToMsBuild="true" IgnoreExitCode="true" StandardErrorImportance="Normal" StandardOutputImportance="Normal">
      <Output TaskParameter="ExitCode" PropertyName="_PseudoLocalizeInstalled" />
    </Exec>
    <Warning Condition=" $(_PseudoLocalizeInstalled) != 0 " Text="The PseudoLocalize .NET Global Tool is not installed. To install this tool, run the following command: dotnet tool install --global PseudoLocalize" />
    <Exec Condition=" $(_PseudoLocalizeInstalled) == 0 " Command="pseudo-localize %(_PseudoLocalizedFiles.Identity) --overwrite --force" ConsoleToMsBuild="true" StandardOutputImportance="Normal" />
  </Target>
</Project>
