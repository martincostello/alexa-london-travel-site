<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <ContainerFamily>noble-chiseled-extra</ContainerFamily>
    <Description>Website for the London Travel Amazon Alexa skill.</Description>
    <EnableConfigurationBindingGenerator>true</EnableConfigurationBindingGenerator>
    <EnableRequestDelegateGenerator>true</EnableRequestDelegateGenerator>
    <InvariantGlobalization>false</InvariantGlobalization>
    <NoWarn>$(NoWarn);CA1716</NoWarn>
    <OutputType>Exe</OutputType>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <PublishSelfContained>true</PublishSelfContained>
    <RootNamespace>MartinCostello.LondonTravel.Site</RootNamespace>
    <SatelliteResourceLanguages>en;en-GB;en-US;qps-Ploc</SatelliteResourceLanguages>
    <TargetFramework>net9.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>latest</TypeScriptToolsVersion>
    <UserSecretsId>londontravel.martincostello.com</UserSecretsId>
    <XlfLanguages>en-GB;en-US;qps-Ploc</XlfLanguages>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Aspire.Azure.Security.KeyVault" />
    <PackageReference Include="Aspire.Azure.Storage.Blobs" />
    <PackageReference Include="Aspire.Microsoft.Azure.Cosmos" />
    <PackageReference Include="AspNet.Security.OAuth.Amazon" />
    <PackageReference Include="AspNet.Security.OAuth.Apple" />
    <PackageReference Include="AspNet.Security.OAuth.GitHub" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Blobs" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Keys" />
    <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" />
    <PackageReference Include="Azure.Identity" />
    <PackageReference Include="Azure.Monitor.OpenTelemetry.Exporter" />
    <PackageReference Include="MartinCostello.OpenApi.Extensions" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Google" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Twitter" />
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.HostingStartup" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
    <PackageReference Include="Microsoft.Azure.Cosmos" />
    <PackageReference Include="Microsoft.DotNet.XliffTasks" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Extensions.Http.Resilience" />
    <PackageReference Include="Microsoft.IdentityModel.JsonWebTokens" />
    <PackageReference Include="Microsoft.OpenApi" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Http" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Process" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Runtime" />
    <PackageReference Include="OpenTelemetry.Resources.Azure" />
    <PackageReference Include="OpenTelemetry.Resources.Container" />
    <PackageReference Include="OpenTelemetry.Resources.OperatingSystem" />
    <PackageReference Include="OpenTelemetry.Resources.ProcessRuntime" />
    <PackageReference Include="Polly.Extensions" />
    <PackageReference Include="Polly.RateLimiting" />
  </ItemGroup>
  <ItemGroup>
    <ContainerPort Include="8080" Type="tcp" />
    <Content Update=".prettierignore;coverage\**;package.json;package-lock.json;tsconfig.json" CopyToPublishDirectory="Never" />
    <EmbeddedResource Update="SiteResources.resx" Generator="" />
    <InternalsVisibleTo Include="LondonTravel.Site.Tests" />
    <None Remove="assets\scripts\**\*.ts" />
    <TypeScriptCompile Include="assets\scripts\**\*.ts" />
  </ItemGroup>
  <Target Name="BundleAssets" BeforeTargets="BeforeBuild" DependsOnTargets="RestoreNpmPackages">
    <Exec Command="npm run build" Condition=" !Exists('$(MSBuildThisFileDirectory)\wwwroot\assets\js\main.js') " />
  </Target>
  <Target Name="AddGeneratedContentItems" BeforeTargets="AssignTargetPaths" Condition="'$(CI)' != ''">
    <ItemGroup>
      <Content Include="wwwroot/**" CopyToPublishDirectory="PreserveNewest" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);@(Content)" />
    </ItemGroup>
  </Target>
  <ItemGroup>
    <_PseudoLocalizedFiles Include="$(MSBuildThisFileDirectory)xlf\*.qps-Ploc.xlf" />
  </ItemGroup>
  <PropertyGroup>
    <_PseudoLocalizeInstalledCommand Condition=" '$(OS)' == 'Windows_NT' ">where pseudo-localize</_PseudoLocalizeInstalledCommand>
    <_PseudoLocalizeInstalledCommand Condition=" '$(OS)' != 'Windows_NT' ">which pseudo-localize</_PseudoLocalizeInstalledCommand>
  </PropertyGroup>
  <Target Name="UpdatePseudoLocalization" AfterTargets="UpdateXlf">
    <Exec Command="$(_PseudoLocalizeInstalledCommand)" ConsoleToMsBuild="true" IgnoreExitCode="true" StandardErrorImportance="Normal" StandardOutputImportance="Normal">
      <Output TaskParameter="ExitCode" PropertyName="_PseudoLocalizeInstalled" />
    </Exec>
    <Warning Condition=" $(_PseudoLocalizeInstalled) != 0 " Text="The PseudoLocalize .NET Global Tool is not installed. To install this tool, run the following command: dotnet tool restore" />
    <Exec Condition=" $(_PseudoLocalizeInstalled) == 0 " Command="pseudo-localize %(_PseudoLocalizedFiles.Identity) --overwrite --force" ConsoleToMsBuild="true" StandardOutputImportance="Normal" />
  </Target>
</Project>
